spring.http.multipart.max-file-size=60MB
spring.http.multipart.max-request-size=60MB

server.session.timeout=14400

# DataSource settings: set here your own configurations for the database 
# connection. In this example we have "netgloo_blog" as database name and 
# "root" as username and password.
spring.datasource.url = jdbc:mysql://localhost:3306/acces
#spring.datasource.url=jdbc:h2:mem:mydb
#spring.h2.console.enabled=true
spring.datasource.username = root
spring.datasource.password = dlps25

# Keep the connection alive if idle for a long time (needed in production)
#spring.datasource.testWhileIdle = true
#spring.datasource.validationQuery = SELECT 1

# Show or not log for each sql query
spring.jpa.show-sql = false



# Hibernate ddl auto (create, create-drop, update)
spring.jpa.hibernate.ddl-auto = update

# Naming strategy
spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager)

# The SQL dialect makes Hibernate generate better SQL for the chosen database
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.MySQL5Dialect

security.user.name=dlps
security.user.password=dlps
security.user.role=USER

server.port=8080

spring.thymeleaf.cache=false

logging.level.org.springframework.web=INFO
logging.level.org.hibernate=ERROR
logging.file=acces.log

spring.jpa.properties.hibernate.jdbc.batch_size=20
spring.jpa.properties.hibernate.cache.use_second_level_cache=false
spring.jpa.properties.hibernate.order_inserts=true
spring.jpa.properties.hibernate.order_updates=true
